{"version":3,"sources":["../src/index.js"],"names":["require","is","map","all","filter","keys","isEmpty","flatten","chalk","ServerlessWebsocketsPlugin","serverless","options","provider","getProvider","functions","hooks","deployWebsockets","bind","removeWebsockets","displayWebsockets","service","websocketApiName","String","getStage","websocketApiRouteSelectionExpression","apiId","region","stage","apiName","getWebsocketApiName","routeSelectionExpression","getWebsocketApiRouteSelectionExpression","getRegion","init","prepareFunctions","Object","length","cli","log","createApi","createRoutes","createDeployment","getWebsocketUrl","request","StackName","naming","getStackName","res","outputs","Stacks","Outputs","name","func","events","find","event","websocket","outputKey","getLambdaVersionOutputLogicalId","arn","output","OutputKey","OutputValue","routes","e","routeKey","fn","push","apis","websocketApi","Items","api","Name","ApiId","getApi","params","ProtocolType","RouteSelectionExpression","IntegrationMethod","IntegrationType","IntegrationUri","IntegrationId","functionName","split","accountId","Action","FunctionName","Principal","SourceArn","StatementId","catch","providerError","code","integrationId","route","RouteKey","Target","RouteId","clearRoutes","integrationsPromises","createIntegration","addPermission","routesPromises","createRoute","DeploymentId","StageName","baseUrl","consoleLog","yellow","module","exports"],"mappings":"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","sourcesContent":["const { is, map, all, filter, keys, isEmpty, flatten } = require('@serverless/utils')\nconst chalk = require('chalk')\n\nclass ServerlessWebsocketsPlugin {\n  constructor(serverless, options) {\n    this.serverless = serverless\n    this.options = options\n    this.provider = this.serverless.getProvider('aws')\n\n    this.functions = [] // to be filled later...\n\n    this.hooks = {\n      'after:deploy:deploy': this.deployWebsockets.bind(this), // todo change\n      'after:remove:remove': this.removeWebsockets.bind(this),\n      'after:info:info': this.displayWebsockets.bind(this)\n    }\n  }\n\n  getWebsocketApiName() {\n    if (\n      this.serverless.service.provider.websocketApiName &&\n      is(String, this.serverless.service.provider.websocketApiName)\n    ) {\n      return `${this.serverless.service.provider.websocketApiName}`\n    }\n    return `${this.serverless.service.service}-${this.provider.getStage()}-websockets-api`\n  }\n\n  getWebsocketApiRouteSelectionExpression() {\n    if (\n      this.serverless.service.provider.websocketApiRouteSelectionExpression &&\n      is(String, this.serverless.service.provider.websocketApiRouteSelectionExpression)\n    ) {\n      return `${this.serverless.service.provider.websocketApiRouteSelectionExpression}`\n    }\n    return `$request.body.action`\n  }\n\n  getWebsocketUrl() {\n    return `wss://${this.apiId}.execute-api.${this.region}.amazonaws.com/${this.stage}/`\n  }\n\n  init() {\n    this.apiName = this.getWebsocketApiName()\n    this.routeSelectionExpression = this.getWebsocketApiRouteSelectionExpression()\n    this.stage = this.provider.getStage()\n    this.region = this.provider.getRegion()\n  }\n\n  async deployWebsockets() {\n    this.init()\n    await this.prepareFunctions()\n    if (\n      !is(Object, this.serverless.service.functions) ||\n      keys(this.serverless.service.functions).length === 0 ||\n      isEmpty(this.functions)\n    ) {\n      return\n    }\n    this.serverless.cli.log(`Deploying Websockets API named \"${this.apiName}\"...`)\n    await this.createApi()\n    await this.createRoutes()\n    await this.createDeployment()\n    this.serverless.cli.log(\n      `Websockets API named \"${this.apiName}\" with ID \"${this.apiId}\" has been deployed.`\n    )\n    this.serverless.cli.log(`  Websocket URL: ${this.getWebsocketUrl()}`)\n  }\n\n  async prepareFunctions() {\n    // get a list of CF outputs...\n    const res = await this.provider.request('CloudFormation', 'describeStacks', {\n      StackName: this.provider.naming.getStackName()\n    })\n    const outputs = res.Stacks[0].Outputs\n\n    keys(this.serverless.service.functions || {}).map((name) => {\n      const func = this.serverless.service.functions[name]\n      if (func.events && func.events.find((event) => event.websocket)) {\n        // find the arn of this function in the list of outputs...\n        const outputKey = this.provider.naming.getLambdaVersionOutputLogicalId(name)\n        const arn = outputs.find((output) => output.OutputKey === outputKey).OutputValue\n\n        // get list of route keys configured for this function\n        const routes = map((e) => e.websocket.routeKey, filter((e) => e.websocket, func.events))\n\n        const fn = {\n          arn: arn,\n          routes\n        }\n        this.functions.push(fn)\n      }\n    })\n  }\n\n  async getApi() {\n    const apis = await this.provider.request('ApiGatewayV2', 'getApis', {})\n    // todo what if existing api is not valid websocket api? or non existent?\n    const websocketApi = apis.Items.find((api) => api.Name === this.apiName)\n    this.apiId = websocketApi ? websocketApi.ApiId : null\n    return this.apiId\n  }\n\n  async createApi() {\n    await this.getApi()\n    if (!this.apiId) {\n      const params = {\n        Name: this.apiName,\n        ProtocolType: 'WEBSOCKET',\n        RouteSelectionExpression: this.routeSelectionExpression\n      }\n\n      const res = await this.provider.request('ApiGatewayV2', 'createApi', params)\n      this.apiId = res.ApiId\n    }\n    return this.apiId\n  }\n\n  async createIntegration(arn) {\n    const params = {\n      ApiId: this.apiId,\n      IntegrationMethod: 'POST',\n      IntegrationType: 'AWS_PROXY',\n      IntegrationUri: `arn:aws:apigateway:${\n        this.region\n      }:lambda:path/2015-03-31/functions/${arn}/invocations`\n    }\n    // integration creation overwrites existing identical integration\n    // so we don't need to check for existance\n    const res = await this.provider.request('ApiGatewayV2', 'createIntegration', params)\n    return res.IntegrationId\n  }\n\n  async addPermission(arn) {\n    const functionName = arn.split(':')[6]\n    const accountId = arn.split(':')[4]\n    const region = arn.split(':')[3]\n\n    const params = {\n      Action: 'lambda:InvokeFunction',\n      FunctionName: arn,\n      Principal: 'apigateway.amazonaws.com',\n      SourceArn: `arn:aws:execute-api:${region}:${accountId}:${this.apiId}/*/*`,\n      StatementId: `${functionName}-websocket`\n    }\n\n    return this.provider.request('Lambda', 'addPermission', params).catch((e) => {\n      if (e.providerError.code !== 'ResourceConflictException') {\n        throw e\n      }\n    })\n  }\n\n  async createRoute(integrationId, route) {\n    const params = {\n      ApiId: this.apiId,\n      RouteKey: route,\n      Target: `integrations/${integrationId}`\n    }\n\n    return this.provider.request('ApiGatewayV2', 'createRoute', params).catch((e) => {\n      if (e.providerError.code !== 'ConflictException') {\n        throw e\n      }\n    })\n  }\n\n  async clearRoutes() {\n    const res = await this.provider.request('ApiGatewayV2', 'getRoutes', { ApiId: this.apiId })\n    return all(\n      map(\n        (route) =>\n          this.provider.request('ApiGatewayV2', 'deleteRoute', {\n            ApiId: this.apiId,\n            RouteId: route.RouteId\n          }),\n        res.Items\n      )\n    )\n  }\n\n  async createRoutes() {\n    // We clear routes before deploying the new routes for idempotency\n    // since we lost the idempotency feature of CF\n    await this.clearRoutes()\n\n    const integrationsPromises = map(async (fn) => {\n      const integrationId = await this.createIntegration(fn.arn)\n      await this.addPermission(fn.arn)\n      const routesPromises = map((route) => this.createRoute(integrationId, route), fn.routes)\n      return all(routesPromises)\n    }, this.functions)\n\n    return all(integrationsPromises)\n  }\n\n  async createDeployment() {\n    const { DeploymentId } = await this.provider.request('ApiGatewayV2', 'createDeployment', {\n      ApiId: this.apiId\n    })\n    const params = {\n      ApiId: this.apiId,\n      StageName: this.stage,\n      DeploymentId\n    }\n\n    return this.provider.request('ApiGatewayV2', 'updateStage', params).catch((e) => {\n      if (e.providerError.code === 'NotFoundException') {\n        return this.provider.request('ApiGatewayV2', 'createStage', params)\n      }\n    })\n  }\n\n  async removeWebsockets() {\n    this.init()\n    await this.getApi()\n    if (!this.apiId) {\n      return\n    }\n\n    this.serverless.cli.log(\n      `Removing Websockets API named \"${this.apiName}\" with ID \"${this.apiId}\"`\n    )\n    return this.provider.request('ApiGatewayV2', 'deleteApi', { ApiId: this.apiId })\n  }\n\n  async displayWebsockets() {\n    this.init()\n    await this.prepareFunctions()\n    if (isEmpty(this.functions)) {\n      return\n    }\n    await this.getApi()\n    const baseUrl = this.getWebsocketUrl()\n    const routes = flatten(map((fn) => fn.routes, this.functions))\n    this.serverless.cli.consoleLog(chalk.yellow('WebSockets:'))\n    this.serverless.cli.consoleLog(`  ${chalk.yellow('Base URL:')} ${baseUrl}`)\n    this.serverless.cli.consoleLog(chalk.yellow('  Routes:'))\n    map((route) => this.serverless.cli.consoleLog(`    - ${baseUrl}${route}`), routes)\n  }\n}\n\nmodule.exports = ServerlessWebsocketsPlugin\n"],"file":"index.js"}