"use strict";

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// eslint-disable-next-line no-underscore-dangle
if (!global._babelPolyfill) {
  // eslint-disable-next-line global-require
  require('@babel/polyfill');
} // eslint-disable-next-line global-require
// require('source-map-support/register')


const common = require('./common');

const constants = require('./constants');

const data = require('./data');

const error = require('./error');

const fetch = require('./fetch');

const fs = require('./fs');

const ip = require('./ip');

const lang = require('./lang');

const logging = require('./logging');

const logic = require('./logic');

const path = require('./path');

const string = require('./string');

module.exports = _objectSpread({}, common, constants, data, error, fetch, fs, ip, lang, logging, logic, path, string);
//# sourceMappingURL=index.js.map