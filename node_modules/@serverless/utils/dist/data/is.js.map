{"version":3,"sources":["../../src/data/is.js"],"names":["is","construtor","value","constructor"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,EAAE,GAAG,oBACT,2BAAa,IAAb,EAAmB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACxC,SAAQA,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACC,WAAN,KAAsBF,UAAxC,IAAuDC,KAAK,YAAYD,UAA/E;AACD,CAFD,CADS,CAAX;eAMeD,E","sourcesContent":["import curry from '../common/curry'\nimport dispatchable from '../common/dispatchable'\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This function will check up the inheritance chain, if any.\n *\n * @function\n * @since v0.0.3\n * @category data\n * @sig (* -> {*}) -> a -> boolean\n * @param {Object} constructor A constructor\n * @param {*} value The value to test\n * @returns {boolean}\n * @example\n *\n * is(Object, {}); //=> true\n * is(Number, 1); //=> true\n * is(Object, 1); //=> false\n * is(String, 's'); //=> true\n * is(String, new String('')); //=> true\n * is(Object, new String('')); //=> true\n * is(Object, 's'); //=> false\n * is(Number, {}); //=> false\n */\nconst is = curry(\n  dispatchable('is', (construtor, value) => {\n    return (value != null && value.constructor === construtor) || value instanceof construtor\n  })\n)\n\nexport default is\n"],"file":"is.js"}