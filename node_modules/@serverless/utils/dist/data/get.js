"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castPath = _interopRequireDefault(require("./castPath"));

var _curry = _interopRequireDefault(require("../common/curry"));

var _defn = _interopRequireDefault(require("../common/defn"));

var _getPath = _interopRequireDefault(require("./getPath"));

var _isArray = _interopRequireDefault(require("../lang/isArray"));

var _isFunction = _interopRequireDefault(require("../lang/isFunction"));

var _isUndefined = _interopRequireDefault(require("../lang/isUndefined"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Retrieve the value at a given path.
 *
 * Paths can be defined by a string an array. The path parameter also accepts a function that will be used as a selector against the data.
 *
 *
 *
 * @function
 * @since v0.0.3
 * @category data
 * @param {Array|string|number|Function} path The path to use.
 * @param {Object} value The value to retrieve the nested property from.
 * @returns {*} The data at `path`.
 * @example
 *
 * get(['a', 'b'], {a: {b: 2}})
 * //=> 2
 *
 * get(['a', 'b'], {c: {b: 2}})
 * //=> undefined
 *
 * get('a', {a: {b: 2}})
 * //=> { b: 2 }
 *
 * get('a.b', {a: {b: 2}})
 * //=> 2
 *
 * get('a[0]', {a: [ 1, 2 ]})
 * //=> 1
 *
 * get('[0]', [ 1, 2 ])
 * //=> 1
 */
const get = (0, _curry.default)((0, _defn.default)('get', (selector, value) => {
  if ((0, _isUndefined.default)(selector)) {
    return value;
  }

  if ((0, _isFunction.default)(selector)) {
    return selector(value);
  }

  let parts = selector;

  if (!(0, _isArray.default)(selector)) {
    parts = (0, _castPath.default)(selector, value);
  }

  return (0, _getPath.default)(parts, value);
}));
var _default = get;
exports.default = _default;
//# sourceMappingURL=get.js.map