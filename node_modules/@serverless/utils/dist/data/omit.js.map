{"version":3,"sources":["../../src/data/omit.js"],"names":["omit","names","obj","result","index","length","idx","prop","Object","prototype","hasOwnProperty","call"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;AAaA,MAAMA,IAAI,GAAG,oBACX,mBAAK,MAAL,EAAa,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3B,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,KAAK,GAAG,EAAd;AAF2B,QAGnBC,MAHmB,GAGRJ,KAHQ,CAGnBI,MAHmB;AAI3B,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOA,GAAG,GAAGD,MAAb,EAAqB;AACnBD,IAAAA,KAAK,CAACH,KAAK,CAACK,GAAD,CAAN,CAAL,GAAoB,CAApB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,OAAK,MAAMC,IAAX,IAAmBL,GAAnB,EAAwB;AACtB,QAAI,CAACM,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,KAArC,EAA4CG,IAA5C,CAAL,EAAwD;AACtDJ,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeL,GAAG,CAACK,IAAD,CAAlB;AACD;AACF;;AACD,SAAOJ,MAAP;AACD,CAjBD,CADW,CAAb;eAqBeH,I","sourcesContent":["import curry from '../common/curry'\nimport defn from '../common/defn'\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @function\n * @since v0.0.6\n * @category data\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @returns {Object} A new object with properties from `names` not on it.\n * @example\n *\n * omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}) //=> {b: 2, c: 3}\n */\nconst omit = curry(\n  defn('omit', (names, obj) => {\n    const result = {}\n    const index = {}\n    const { length } = names\n    let idx = 0\n\n    while (idx < length) {\n      index[names[idx]] = 1\n      idx += 1\n    }\n\n    for (const prop in obj) {\n      if (!Object.prototype.hasOwnProperty.call(index, prop)) {\n        result[prop] = obj[prop]\n      }\n    }\n    return result\n  })\n)\n\nexport default omit\n"],"file":"omit.js"}