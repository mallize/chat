{"version":3,"sources":["../../src/data/getParent.js"],"names":["getParent","selector","value","undefined","parts"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,MAAMA,SAAS,GAAG,oBAChB,mBAAK,WAAL,EAAkB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,MAAI,0BAAYD,QAAZ,CAAJ,EAA2B;AACzB,WAAOE,SAAP,CADyB,CACR;AAClB;;AACD,MAAI,yBAAWF,QAAX,CAAJ,EAA0B;AACxB,WAAOA,QAAQ,CAACC,KAAD,CAAf;AACD;;AACD,MAAIE,KAAK,GAAGH,QAAZ;;AACA,MAAI,CAAC,sBAAQA,QAAR,CAAL,EAAwB;AACtBG,IAAAA,KAAK,GAAG,uBAASH,QAAT,EAAmBC,KAAnB,CAAR;AACD;;AACD,SAAO,4BAAcE,KAAd,EAAqBF,KAArB,CAAP;AACD,CAZD,CADgB,CAAlB;eAgBeF,S","sourcesContent":["import castPath from './castPath'\nimport curry from '../common/curry'\nimport defn from '../common/defn'\nimport getParentPath from './getParentPath'\nimport isArray from '../lang/isArray'\nimport isFunction from '../lang/isFunction'\nimport isUndefined from '../lang/isUndefined'\n\n/**\n * Retrieve the parent value from a given path. The parent value is the value immediately before the last path part.\n *\n * Paths can be defined by a string an array. The path parameter also accepts a function that will be used as a selector against the data.\n *\n *\n *\n * @function\n * @since v0.0.10\n * @category data\n * @param {Array|string|number|Function} path The path to use.\n * @param {Object} value The value to retrieve the parent property value from.\n * @returns {*} The data at `path`.\n * @example\n *\n * getParent(['a', 'b'], {a: {b: 2}})\n * //=> {b: 2}\n *\n * getParent(['a', 'b'], {c: {b: 2}})\n * //=> undefined\n *\n * getParent('a', {a: {b: 2}})\n * //=> {a: {b: 2}}\n *\n * getParent('a.b', {a: {b: 2}})\n * //=> {b: 2}\n *\n * getParent('a[0]', {a: [ 1, 2 ]})\n * //=> [ 1, 2 ]\n */\nconst getParent = curry(\n  defn('getParent', (selector, value) => {\n    if (isUndefined(selector)) {\n      return undefined // has no parent since there's no path parts\n    }\n    if (isFunction(selector)) {\n      return selector(value)\n    }\n    let parts = selector\n    if (!isArray(selector)) {\n      parts = castPath(selector, value)\n    }\n    return getParentPath(parts, value)\n  })\n)\n\nexport default getParent\n"],"file":"getParent.js"}