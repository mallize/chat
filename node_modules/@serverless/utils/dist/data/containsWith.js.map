{"version":3,"sources":["../../src/data/containsWith.js"],"names":["baseContainsWith","predicate","value","collection","next","pNext","done","result","containsWith"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,UAAnB,KACvB,sBACGC,IAAD,IACE,mBACGC,KAAD,IAAW;AACT,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACd,WAAO,KAAP;AACD;;AACD,SAAOL,SAAS,CAACC,KAAD,EAAQG,KAAK,CAACH,KAAd,CAAhB;AACD,CANH,EAOGK,MAAD,IAAY;AACV,MAAIA,MAAM,IAAIH,IAAI,CAACE,IAAnB,EAAyB;AACvB,6BACKF,IADL;AAEEE,MAAAA,IAAI,EAAE,IAFR;AAGEJ,MAAAA,KAAK,EAAEK;AAHT;AAKD;;AACD,SAAOH,IAAP;AACD,CAhBH,EAiBEA,IAjBF,CAFJ,EAoBED,UApBF,CADF;AAwBA;;;;;;;;;;;;;;;;;;;AAgBA,MAAMK,YAAY,GAAG,oBAAM,mBAAK,cAAL,EAAqBR,gBAArB,CAAN,CAArB;eAEeQ,Y","sourcesContent":["import curry from '../common/curry'\nimport defn from '../common/defn'\nimport iterate from '../common/iterate'\nimport pipe from '../common/pipe'\n\nconst baseContainsWith = (predicate, value, collection) =>\n  iterate(\n    (next) =>\n      pipe(\n        (pNext) => {\n          if (pNext.done) {\n            return false\n          }\n          return predicate(value, pNext.value)\n        },\n        (result) => {\n          if (result || next.done) {\n            return {\n              ...next,\n              done: true,\n              value: result\n            }\n          }\n          return next\n        }\n      )(next),\n    collection\n  )\n\n/**\n * Returns `true` if the given predicate returns true for at least one value in the given collection.\n *\n * @function\n * @since v0.0.18\n * @category data\n * @param {*} value The value to compare against.\n * @param {*} collection The collection to consider.\n * @returns {boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @example\n *\n * contains(3, [1, 2, 3]) //=> true\n * contains(4, [1, 2, 3]) //=> false\n * contains({ name: 'Fred' }, [{ name: 'Fred' }]) //=> true\n * contains([42], [[42]]) //=> true\n */\nconst containsWith = curry(defn('containsWith', baseContainsWith))\n\nexport default containsWith\n\nexport { baseContainsWith }\n"],"file":"containsWith.js"}