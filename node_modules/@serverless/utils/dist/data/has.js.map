{"version":3,"sources":["../../src/data/has.js"],"names":["has","selector","value","parts"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,MAAMA,GAAG,GAAG,oBACV,mBAAK,KAAL,EAAY,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC/B,MAAI,0BAAYD,QAAZ,CAAJ,EAA2B;AACzB,WAAO,CAAC,CAACC,KAAT;AACD;;AACD,MAAIC,KAAK,GAAGF,QAAZ;;AACA,MAAI,CAAC,sBAAQA,QAAR,CAAL,EAAwB;AACtBE,IAAAA,KAAK,GAAG,uBAASF,QAAT,EAAmBC,KAAnB,CAAR;AACD;;AACD,SAAO,sBAAQC,KAAR,EAAeD,KAAf,CAAP;AACD,CATD,CADU,CAAZ;eAaeF,G","sourcesContent":["import castPath from './castPath'\nimport curry from '../common/curry'\nimport defn from '../common/defn'\nimport hasPath from './hasPath'\nimport isArray from '../lang/isArray'\nimport isUndefined from '../lang/isUndefined'\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @function\n * @since v0.0.3\n * @category data\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array|String} selector The selector to use.\n * @param {Object} value The value to check the path in.\n * @return {Boolean} Whether the selector exists.\n * @example\n *\n * has(['a', 'b'], {a: {b: 2}})          // => true\n * has(['a', 'b'], {a: {b: undefined}})  // => true\n * has('a.b', {a: {c: 2}})               // => false\n * has([], {})                           // => true\n */\nconst has = curry(\n  defn('has', (selector, value) => {\n    if (isUndefined(selector)) {\n      return !!value\n    }\n    let parts = selector\n    if (!isArray(selector)) {\n      parts = castPath(selector, value)\n    }\n    return hasPath(parts, value)\n  })\n)\n\nexport default has\n"],"file":"has.js"}