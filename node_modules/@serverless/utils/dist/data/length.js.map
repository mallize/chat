{"version":3,"sources":["../../src/data/length.js"],"names":["length","list","TypeError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;AAaA,MAAMA,MAAM,GAAG,oBACb,mBAAK,QAAL,EAAgBC,IAAD,IAAU;AACvB,MAAI,CAAC,0BAAYA,IAAZ,CAAL,EAAwB;AACtB,UAAM,IAAIC,SAAJ,CAAe,gEAA+DD,IAAK,EAAnF,CAAN;AACD;;AACD,SAAOA,IAAI,CAACD,MAAZ;AACD,CALD,CADa,CAAf;eASeA,M","sourcesContent":["import curry from '../common/curry'\nimport defn from '../common/defn'\nimport isArrayLike from '../lang/isArrayLike'\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @function\n * @since v0.0.10\n * @category data\n * @param {*} list The array like value to inspect.\n * @return {Number} The length of the list.\n * @example\n *\n * length([]) //=> 0\n * length([1, 2, 3]) //=> 3\n */\nconst length = curry(\n  defn('length', (list) => {\n    if (!isArrayLike(list)) {\n      throw new TypeError(`length method expects list to be ArrayLike. Instead received ${list}`)\n    }\n    return list.length\n  })\n)\n\nexport default length\n"],"file":"length.js"}