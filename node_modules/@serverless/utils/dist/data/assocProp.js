"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchableAssocProp = exports.baseAssocProp = exports.default = void 0;

var _allWith = _interopRequireDefault(require("../common/allWith"));

var _always = _interopRequireDefault(require("./always"));

var _curry = _interopRequireDefault(require("../common/curry"));

var _dispatchable = _interopRequireDefault(require("../common/dispatchable"));

var _isFunction = _interopRequireDefault(require("../lang/isFunction"));

var _isMap = _interopRequireDefault(require("../lang/isMap"));

var _isUndefined = _interopRequireDefault(require("../lang/isUndefined"));

var _objectIterator = _interopRequireDefault(require("../lang/objectIterator"));

var _over = _interopRequireDefault(require("./over"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const baseAssocProp = (prop, value, object) => {
  if ((0, _isUndefined.default)(prop)) {
    return value;
  }

  if ((0, _isFunction.default)(prop)) {
    return (0, _over.default)(prop, (0, _always.default)(value), object);
  }

  if ((0, _isMap.default)(object)) {
    const result = new Map(object.entries());
    return result.set(prop, value);
  }

  const result = {};
  const iterator = (0, _objectIterator.default)(object);
  let next = {
    done: false
  };

  while (!next.done) {
    next = iterator.next();

    if (!next.done) {
      result[next.key] = object[next.key];
    }
  }

  result[prop] = value;
  return result;
};

exports.baseAssocProp = baseAssocProp;
const dispatchableAssocProp = (0, _dispatchable.default)('assocProp', baseAssocProp);
/**
 * Returns the result of "setting" the portion of the given data structure
 * focused by the given lens to the given value.
 *
 * @function
 * @since v0.0.3
 * @category data
 * @param {string} prop The property name to set
 * @param {*} value The new value
 * @param {Object|Map} object The object to clone
 * @returns {Object} A new object equivalent to the original except for the changed property.
 * @example
 *
 * assocProp('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}
 */

exports.dispatchableAssocProp = dispatchableAssocProp;
const assocProp = (0, _curry.default)((prop, value, object) => (0, _allWith.default)(([resolvedProp, resolvedObject]) => dispatchableAssocProp(resolvedProp, value, resolvedObject), [prop, object]));
var _default = assocProp;
exports.default = _default;
//# sourceMappingURL=assocProp.js.map