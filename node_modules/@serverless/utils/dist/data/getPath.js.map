{"version":3,"sources":["../../src/data/getPath.js"],"names":["getPath","path","obj","TypeError","pathParts","val","idx","length"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAMA,OAAO,GAAG,oBACd,mBAAK,SAAL,EAAgB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7B,MAAI,CAAC,sBAAQD,IAAR,CAAL,EAAoB;AAClB,UAAM,IAAIE,SAAJ,CAAe,0DAAyDF,IAAK,EAA7E,CAAN;AACD;;AACD,QAAMG,SAAS,GAAG,sBAAQH,IAAR,CAAlB;AACA,MAAII,GAAG,GAAGH,GAAV;AACA,MAAII,GAAG,GAAG,CAAV;;AACA,SAAOA,GAAG,GAAGF,SAAS,CAACG,MAAvB,EAA+B;AAC7BF,IAAAA,GAAG,GAAG,sBAAQD,SAAS,CAACE,GAAD,CAAjB,EAAwBD,GAAxB,CAAN;;AACA,QAAI,0BAAYA,GAAZ,CAAJ,EAAsB;AACpB,aAAOA,GAAP;AACD;;AACDC,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,GAAP;AACD,CAfD,CADc,CAAhB;eAmBeL,O","sourcesContent":["import compact from './compact'\nimport curry from '../common/curry'\nimport defn from '../common/defn'\nimport getProp from './getProp'\nimport isArray from '../lang/isArray'\nimport isUndefined from '../lang/isUndefined'\n\n/**\n * Retrieve the value at a given path.\n *\n * @function\n * @since v0.0.3\n * @category data\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @returns {*} The data at `path`.\n * @example\n *\n * getPath(['a', 'b'], {a: {b: 2}}); //=> 2\n * getPath(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nconst getPath = curry(\n  defn('getPath', (path, obj) => {\n    if (!isArray(path)) {\n      throw new TypeError(`getPath expected path to be an Array. Instead received ${path}`)\n    }\n    const pathParts = compact(path)\n    let val = obj\n    let idx = 0\n    while (idx < pathParts.length) {\n      val = getProp(pathParts[idx], val)\n      if (isUndefined(val)) {\n        return val\n      }\n      idx += 1\n    }\n    return val\n  })\n)\n\nexport default getPath\n"],"file":"getPath.js"}