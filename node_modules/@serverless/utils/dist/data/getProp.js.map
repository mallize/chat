{"version":3,"sources":["../../src/data/getProp.js"],"names":["getProp","prop","value","undefined","get"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMA,OAAO,GAAG,oBACd,mBAAK,SAAL,EAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,MAAI,0BAAYD,IAAZ,CAAJ,EAAuB;AACrB,WAAOC,KAAP;AACD;;AACD,MAAI,yBAAWD,IAAX,CAAJ,EAAsB;AACpB,WAAOA,IAAI,CAACC,KAAD,CAAX;AACD;;AACD,MAAI,oBAAMA,KAAN,CAAJ,EAAkB;AAChB,WAAOC,SAAP;AACD;;AACD,MAAI,yBAAWD,KAAK,CAACE,GAAjB,CAAJ,EAA2B;AACzB,WAAOF,KAAK,CAACE,GAAN,CAAUH,IAAV,CAAP;AACD;;AACD,SAAOC,KAAK,CAACD,IAAD,CAAZ;AACD,CAdD,CADc,CAAhB;eAkBeD,O","sourcesContent":["import curry from '../common/curry'\nimport defn from '../common/defn'\nimport isFunction from '../lang/isFunction'\nimport isNil from '../lang/isNil'\nimport isUndefined from '../lang/isUndefined'\n\n/**\n * Returns a function that when supplied an object returns the indicated  property of that object, if it exists.\n *\n * @function\n * @since v0.0.3\n * @alias prop\n * @category data\n * @sig s -> {s: a} -> a | Undefined\n * @param {string|number|Function} prop The property name or property selector\n * @param {Object} value The value to query\n * @returns {*} The value at the given property\n * @example\n *\n * getProp('x', {x: 100}) //=> 100\n * getProp('x', {})       //=> undefined\n * getProp(undefined, {})  //=> {}\n * getProp(1, ['foo', 'bar'])  //=> 'bar'\n * getProp((value) => value[0], ['foo', 'bar'])  //=> 'foo'\n * getProp('foo', {\n *   foo: 'bar',\n *   get(prop) { return this[prop] }\n * }) //=> 'bar'\n */\nconst getProp = curry(\n  defn('getProp', (prop, value) => {\n    if (isUndefined(prop)) {\n      return value\n    }\n    if (isFunction(prop)) {\n      return prop(value)\n    }\n    if (isNil(value)) {\n      return undefined\n    }\n    if (isFunction(value.get)) {\n      return value.get(prop)\n    }\n    return value[prop]\n  })\n)\n\nexport default getProp\n"],"file":"getProp.js"}