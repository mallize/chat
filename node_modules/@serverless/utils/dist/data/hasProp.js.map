{"version":3,"sources":["../../src/data/hasProp.js"],"names":["hasProp","prop","value","error","has","Object","prototype","hasOwnProperty","call"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMA,OAAO,GAAG,oBAAM,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,MAAI,0BAAYD,IAAZ,CAAJ,EAAuB;AACrB,WAAO,CAAC,CAACC,KAAT;AACD;;AACD,MAAI,yBAAWD,IAAX,CAAJ,EAAsB;AACpB,QAAI;AACF,aAAO,CAAC,CAACA,IAAI,CAACC,KAAD,CAAb;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACd,aAAO,KAAP;AACD;AACF;;AACD,MAAI,oBAAMD,KAAN,CAAJ,EAAkB;AAChB,WAAO,KAAP;AACD;;AACD,MAAI,oBAAMA,KAAN,CAAJ,EAAkB;AAChB,WAAOA,KAAK,CAACE,GAAN,CAAUH,IAAV,CAAP;AACD;;AACD,SAAOI,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,KAArC,EAA4CD,IAA5C,CAAP;AACD,CAlBe,CAAhB;eAoBeD,O","sourcesContent":["import curry from '../common/curry'\nimport isFunction from '../lang/isFunction'\nimport isMap from '../lang/isMap'\nimport isNil from '../lang/isNil'\nimport isUndefined from '../lang/isUndefined'\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * If prop is a function then it is executed against value as a selector.\n * If prop is undefined then value will be checked for truthiness.\n *\n * @function\n * @since v0.0.3\n * @category data\n * @sig s -> {s: x} -> Boolean\n * @param {String | Function} prop The name of the property to check for.\n * @param {Object | Map} value The value to query.\n * @returns {Boolean} Whether the property exists.\n * @example\n *\n * hasProp('name', {name: 'philipp'})  //=> true\n * hasProp('name', {})                 //=> false\n *\n * hasProp(undefined, {})            //=> true\n * hasProp(undefined, null)          //=> false\n *\n * hasProp((value) => value.name, { name: 'eslam'})     //=> true\n * hasProp((value) => value.birthday, { name: 'raees'}) //=> false\n */\nconst hasProp = curry((prop, value) => {\n  if (isUndefined(prop)) {\n    return !!value\n  }\n  if (isFunction(prop)) {\n    try {\n      return !!prop(value)\n    } catch (error) {\n      return false\n    }\n  }\n  if (isNil(value)) {\n    return false\n  }\n  if (isMap(value)) {\n    return value.has(prop)\n  }\n  return Object.prototype.hasOwnProperty.call(value, prop)\n})\n\nexport default hasProp\n"],"file":"hasProp.js"}