"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchablePrepend = exports.basePrepend = exports.default = void 0;

var _concat = _interopRequireDefault(require("./concat"));

var _curry = _interopRequireDefault(require("../common/curry"));

var _dispatchable = _interopRequireDefault(require("../common/dispatchable"));

var _isString = _interopRequireDefault(require("../lang/isString"));

var _resolveWith = _interopRequireDefault(require("../common/resolveWith"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const basePrepend = (value, arrayLike) => {
  if ((0, _isString.default)(arrayLike)) {
    return (0, _concat.default)(value, arrayLike);
  }

  return (0, _concat.default)([value], arrayLike);
};

exports.basePrepend = basePrepend;
const dispatchablePrepend = (0, _dispatchable.default)('prepend', basePrepend);
/**
 * Returns a new list with the given element at the front, followed by the contents of the list.
 *
 * This method dispatches to the `prepend` method of the `arrayLike` argument if it exists.
 *
 * This method will auto upgrade to async and resolve the `arrayLike` value if the `arrayLike` value is a Promise.
 *
 * @function
 * @since v0.0.13
 * @category data
 * @param {*} value The value to add to the end of the new list.
 * @param {Array|string} arrayLike The array like value of elements to prepend a new item to.
 * @return {Array|string} A new array or string containing the elements of the old list prepended with `value`.
 * @example
 *
 * prepend('write', ['more', 'tests']) //=> ['write', 'more', 'tests']
 * prepend('write', []) //=> ['write']
 * prepend(['write'], ['more', 'tests']) //=> ['write', 'more', ['tests']]
 * prepend('write', ' more tests') //=> 'write more tests'
 */

exports.dispatchablePrepend = dispatchablePrepend;
const prepend = (0, _curry.default)((value, arrayLike) => (0, _resolveWith.default)(resolvedArrayLike => dispatchablePrepend(value, resolvedArrayLike), arrayLike));
var _default = prepend;
exports.default = _default;
//# sourceMappingURL=prepend.js.map