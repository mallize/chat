{"version":3,"sources":["../../src/data/indexOf.js"],"names":["indexOf","value","list"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAMA,OAAO,GAAG,oBAAM,mBAAK,SAAL,EAAgB,CAACC,KAAD,EAAQC,IAAR,KAAiB,wCAAmBD,KAAnB,EAA0B,CAA1B,EAA6BC,IAA7B,CAAjC,CAAN,CAAhB;eAEeF,O","sourcesContent":["import { baseIndexOfAtIndex } from './indexOfAtIndex'\nimport curry from '../common/curry'\nimport defn from '../common/defn'\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1 if the item is not included in the array. [`equals`](#equals) is used to determine equality.\n *\n * This method automatically upgrades to async if either of the parameters are a Promise\n *\n * @function\n * @since v0.0.18\n * @category data\n * @param {*} value The value to find.\n * @param {Array} list The list to search in.\n * @return {Number} the index of the value, or -1 if the value is not found.\n * @example\n *\n * indexOf(3, [1,2,3,4]) //=> 2\n * indexOf(10, [1,2,3,4]) //=> -1\n */\nconst indexOf = curry(defn('indexOf', (value, list) => baseIndexOfAtIndex(value, 0, list)))\n\nexport default indexOf\n"],"file":"indexOf.js"}