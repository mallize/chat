{"version":3,"sources":["../../src/fs/parseFile.js"],"names":["parseFile","filePath","contents","options","JSON","parse","YAML","load","toString","filename","endsWith","split","trim"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,SAAS,GAAG,qBAAO,CAAP,EAAU,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAAO,GAAG,EAA/B,KAAsC;AAChE,MAAI,yBAAWF,QAAX,CAAJ,EAA0B;AACxB,WAAOG,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAP;AACD,GAFD,MAEO,IAAI,yBAAWD,QAAX,CAAJ,EAA0B;AAC/B,WAAOK,gBAAKC,IAAL,CAAUL,QAAQ,CAACM,QAAT,EAAV,EAA+B,oBAAML,OAAN,EAAe;AAAEM,MAAAA,QAAQ,EAAER;AAAZ,KAAf,CAA/B,CAAP;AACD,GAFM,MAEA,IAAIA,QAAQ,CAACS,QAAT,CAAkB,YAAlB,CAAJ,EAAqC;AAC1C,WAAOR,QAAQ,CAACM,QAAT,GAAoBG,KAApB,CAA0B,IAA1B,CAAP;AACD;;AACD,SAAOT,QAAQ,CAACM,QAAT,GAAoBI,IAApB,EAAP;AACD,CATiB,CAAlB;eAWeZ,S","sourcesContent":["import YAML from 'js-yaml'\nimport curryN from '../common/curryN'\nimport isJsonPath from './isJsonPath'\nimport isYamlPath from './isYamlPath'\nimport merge from '../data/merge'\n\nconst parseFile = curryN(2, (filePath, contents, options = {}) => {\n  if (isJsonPath(filePath)) {\n    return JSON.parse(contents)\n  } else if (isYamlPath(filePath)) {\n    return YAML.load(contents.toString(), merge(options, { filename: filePath }))\n  } else if (filePath.endsWith('.slsignore')) {\n    return contents.toString().split('\\n')\n  }\n  return contents.toString().trim()\n})\n\nexport default parseFile\n"],"file":"parseFile.js"}