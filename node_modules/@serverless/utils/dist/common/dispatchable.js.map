{"version":3,"sources":["../../src/common/dispatchable.js"],"names":["dispatchable","name","fn","arity","length","override","args","apply","obj"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMA,YAAY,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AACjC,QAAMC,KAAK,GAAGD,EAAE,CAACE,MAAjB;;AACA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAS,GAAGC,IAAZ,EAAkB;AACjC,QAAIA,IAAI,CAACF,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOF,EAAE,CAACK,KAAH,CAAS,IAAT,CAAP;AACD;;AACD,UAAMC,GAAG,GAAGF,IAAI,CAACA,IAAI,CAACF,MAAL,GAAc,CAAf,CAAhB;;AACA,QAAI,CAAC,sBAAQI,GAAR,CAAD,IAAiB,uBAASA,GAAT,CAAjB,IAAkC,yBAAWA,GAAG,CAACP,IAAD,CAAd,CAAlC,IAA2DO,GAAG,KAAK,IAAvE,EAA6E;AAC3E,aAAOA,GAAG,CAACP,IAAD,CAAH,CAAU,GAAGK,IAAb,CAAP;AACD;;AACD,WAAOJ,EAAE,CAACK,KAAH,CAAS,IAAT,EAAeD,IAAf,CAAP;AACD,GATD;;AAUA,SAAO,yBAAWH,KAAX,EAAkBE,QAAlB,CAAP;AACD,CAbD;;eAeeL,Y","sourcesContent":["import isArray from '../lang/isArray'\nimport isFunction from '../lang/isFunction'\nimport isObject from '../lang/isObject'\nimport nArySpread from './nArySpread'\n\n/**\n * Returns a function that dispatches with different strategies based on the object in list position (last argument). If it is an array, executes [fn].\n *\n * Otherwise, it will default to executing [fn].\n *\n * @function\n * @since v0.0.6\n * @category common\n * @param {string} name The name of the method to call if it exists\n * @param {Function} fn The default function to execute if the named one does not exist on the last arg\n * @returns {Function} A function that dispatches on object in list position\n * @example\n * const get = dispatchable('get', (prop, value) => value[prop])\n * get('a', { a: 'foo' }) //=> 'foo'\n *\n * const obj = {\n *   props: {\n *     a: 'bar'\n *   }\n *   get: (prop) => obj.props[prop]\n * }\n * get('a', obj) //=> 'bar'\n */\nconst dispatchable = (name, fn) => {\n  const arity = fn.length\n  const override = function(...args) {\n    if (args.length === 0) {\n      return fn.apply(this)\n    }\n    const obj = args[args.length - 1]\n    if (!isArray(obj) && isObject(obj) && isFunction(obj[name]) && obj !== this) {\n      return obj[name](...args)\n    }\n    return fn.apply(this, args)\n  }\n  return nArySpread(arity, override)\n}\n\nexport default dispatchable\n"],"file":"dispatchable.js"}