{"version":3,"sources":["../../src/common/nArySpread.js"],"names":["nArySpread","n","fn","idx","argNames","push","func","Function","join"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAMA,UAAU,GAAG,oBAAM,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAClC,MAAIC,GAAG,GAAG,CAAV;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAOD,GAAG,GAAGF,CAAb,EAAgB;AACdG,IAAAA,QAAQ,CAACC,IAAT,CAAe,IAAGF,GAAI,EAAtB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,QAAMG,IAAI,GAAG,IAAIC,QAAJ,CACX,IADW,EAEV,mBAAkBH,QAAQ,CAACI,IAAT,CAAc,IAAd,CAAoB;;MAF5B,CAAb;AAMA,SAAOF,IAAI,CAACJ,EAAD,CAAX;AACD,CAdkB,CAAnB;eAgBeF,U","sourcesContent":["import curry from './curry'\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts exactly `n` parameters. Any extraneous parameters are spread and then reapplied on execution. This is useful when you want to ensure a function's paramter length is exactly `n` but still passes all arguments through.\n *\n * @function\n * @since v0.0.4\n * @category common\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @returns {Function} A new function wrapping `fn`. The new function is guaranteed to be of parameter length `n`.\n * @example\n *\n * const takesNArgs = (...args) => [ ...args ]\n *\n * takesNArgs.length //=> 0\n * takesNArgs(1, 2) //=> [1, 2]\n *\n * const takesTwoArgs = nArySpread(2, takesNArgs)\n * takesTwoArgs.length //=> 2\n * // All arguments are passed to the wrapped function\n * takesTwoArgs(1, 2, 3) //=> [1, 2, 3]\n *\n * const curriedTakesTwoArgs = curry(takesTwoArgs)\n * // auto currying works as expected\n * const takesAtLeastOneMoreArg = curriedTakesTwoArgs(3)\n * takesAtLeastOneMoreArg(1, 2) // => [3, 1, 2]\n */\nconst nArySpread = curry((n, fn) => {\n  let idx = 0\n  const argNames = []\n  while (idx < n) {\n    argNames.push(`a${idx}`)\n    idx += 1\n  }\n  const func = new Function(\n    'fn',\n    `return function(${argNames.join(', ')}) {\n      return fn.apply(this, arguments);\n    }`\n  )\n  return func(fn)\n})\n\nexport default nArySpread\n"],"file":"nArySpread.js"}