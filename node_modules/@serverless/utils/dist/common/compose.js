"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFlatten = _interopRequireDefault(require("../lang/arrayFlatten"));

var _arrayLikeReduceRight = _interopRequireDefault(require("../lang/arrayLikeReduceRight"));

var _arrayLikeSlice = _interopRequireDefault(require("../lang/arrayLikeSlice"));

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Performs right-to-left function composition. The rightmost function may have any arity; the remaining functions must be unary.
 *
 * **Note:** The result of compose is not automatically curried.
 *
 * @function
 * @since v0.0.10
 * @category common
 * @param {...Function} functions The functions to compose
 * @returns {Function}
 * @example
 *
 * const classyGreeting = (firstName, lastName) => "The name's " + lastName + ", " + firstName + " " + lastName
 * const yellGreeting = compose(toUpper, classyGreeting)
 * yellGreeting('James', 'Bond')
 * //=> "THE NAME'S BOND, JAMES BOND"
 *
 * compose(Math.abs, add(1), multiply(2))(-4) //=> 7
 */
const compose = (...functions) => {
  functions = (0, _arrayFlatten.default)(functions);
  const _functions = functions,
        length = _functions.length;

  if (length === 0) {
    return _identity.default;
  }

  if (length === 1) {
    return functions[0];
  }

  const lastFunc = functions[length - 1];
  const rest = (0, _arrayLikeSlice.default)(functions, 0, length - 1);
  return (...args) => (0, _arrayLikeReduceRight.default)(rest, lastFunc(...args), (composed, func) => func(composed));
};

var _default = compose;
exports.default = _default;
//# sourceMappingURL=compose.js.map