{"version":3,"sources":["../../src/common/resolve.js"],"names":["baseResolve","value","resolve","then","resolved"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC7B,MAAI,CAAC,gCAAeA,KAAf,CAAL,EAA4B;AAC1B,QAAI,yBAAWA,KAAK,CAACC,OAAjB,CAAJ,EAA+B;AAC7B,aAAOF,WAAW,CAACC,KAAK,CAACC,OAAN,EAAD,CAAlB;AACD;;AACD,QAAI,wBAAUD,KAAV,CAAJ,EAAsB;AACpB,aAAOA,KAAK,CAACE,IAAN,CAAYC,QAAD,IAAcJ,WAAW,CAACI,QAAD,CAApC,CAAP;AACD;;AACD,WAAO,gDAAuBH,KAAvB,CAAP;AACD;;AACD,SAAOA,KAAP;AACD,CAXD;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,MAAMC,OAAO,GAAG,oBAAMF,WAAN,CAAhB;eAEeE,O","sourcesContent":["import { baseIsResolved } from './isResolved'\nimport { baseResolveToGenerator } from './resolveToGenerator'\nimport curry from './curry'\nimport isFunction from '../lang/isFunction'\nimport isPromise from '../lang/isPromise'\n\nconst baseResolve = (value) => {\n  if (!baseIsResolved(value)) {\n    if (isFunction(value.resolve)) {\n      return baseResolve(value.resolve())\n    }\n    if (isPromise(value)) {\n      return value.then((resolved) => baseResolve(resolved))\n    }\n    return baseResolveToGenerator(value)\n  }\n  return value\n}\n\n/**\n * Resolves a value to its valueOf.\n *\n * Dispatches to the `resolve` method if it exists. If a resolve method returns a value that is also resolvable, this method will resolve that value as well.\n *\n * @function\n * @since v0.0.9\n * @category common\n * @sig [String] -> {a} -> String\n * @param {...String} values The values to check.\n * @returns {String} The first value found that is a path.\n * @example\n *\n * resolve('foo') // => 'foo'\n *\n * resolve({\n *  valueOf: () => 'bar'\n * }) //=> bar\n *\n * resolve({\n *  resolve: () => 'bar'\n * }) //=> bar\n *\n * resolve({\n *   resolve: () => ({\n *     valueOf: () => 'bar'\n *   })\n * }) //=> bar\n *\n * resolve({\n *   resolve: () => ({\n *     resolve: () => 'bar'\n *   })\n * }) //=> bar\n */\nconst resolve = curry(baseResolve)\n\nexport default resolve\n\nexport { baseResolve }\n"],"file":"resolve.js"}