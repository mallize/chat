{"version":3,"sources":["../../src/common/nth.js"],"names":["nth","offset","list","idx","length","charAt"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,GAAG,GAAG,oBAAM,CAACC,MAAD,EAASC,IAAT,KAAkB;AAClC,QAAMC,GAAG,GAAGF,MAAM,GAAG,CAAT,GAAaC,IAAI,CAACE,MAAL,GAAcH,MAA3B,GAAoCA,MAAhD;AACA,SAAO,uBAASC,IAAT,IAAiBA,IAAI,CAACG,MAAL,CAAYF,GAAZ,CAAjB,GAAoCD,IAAI,CAACC,GAAD,CAA/C;AACD,CAHW,CAAZ;eAKeH,G","sourcesContent":["import curry from './curry'\nimport isString from '../lang/isString'\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @function\n * @since v0.0.5\n * @category common\n * @sig Number -> String -> String\n * @param {number} offset The offset from the 0 index to select from. If negative it will be subtracted from length\n * @param {*} collection The collection to select from\n * @returns {*} The value at the nth index\n * @example\n *\n * const list = ['foo', 'bar', 'baz', 'quux']\n * nth(1, list) //=> 'bar'\n * nth(-1, list) //=> 'quux'\n * nth(-99, list) //=> undefined\n *\n * nth(2, 'abc') //=> 'c'\n * nth(3, 'abc') //=> ''\n */\nconst nth = curry((offset, list) => {\n  const idx = offset < 0 ? list.length + offset : offset\n  return isString(list) ? list.charAt(idx) : list[idx]\n})\n\nexport default nth\n"],"file":"nth.js"}