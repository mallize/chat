{"version":3,"sources":["../../src/common/identical.js"],"names":["baseIdentical","valueA","valueB","identical"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,aAAa,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACxC;AACA,MAAID,MAAM,KAAKC,MAAf,EAAuB;AACrB;AACA;AACA;AACA,WAAOD,MAAM,KAAK,CAAX,IAAgBC,MAAM,KAAK,CAA3B,IAAgC,IAAID,MAAJ,KAAe,IAAIC,MAA1D;AACD,GAPuC,CAQxC;;;AACA,SAAOD,MAAM,KAAKA,MAAX,IAAqBC,MAAM,KAAKA,MAAvC;AACD,CAVD;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,SAAS,GAAG,oBAAMH,aAAN,CAAlB;eAEeG,S","sourcesContent":["import curry from './curry'\n\nconst baseIdentical = (valueA, valueB) => {\n  // SameValue algorithm\n  if (valueA === valueB) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return valueA !== 0 || valueB !== 0 || 1 / valueA === 1 / valueB\n  }\n  // Step 6.a: NaN == NaN\n  return valueA !== valueA && valueB !== valueB\n}\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are identical if they reference the same memory. `NaN` is identical to `NaN`; `0` and `-0` are not identical.\n *\n *  [Object.is](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is) polyfill to avoid requiring consumers ship their own\n *\n * @function\n * @since v0.0.18\n * @category common\n * @param {*} valueA\n * @param {*} valueB\n * @returns {Boolean}\n * @example\n *\n * const o = {}\n * identical(o, o) //=> true\n * identical(1, 1) //=> true\n * identical(1, '1') //=> false\n * identical([], []) //=> false\n * identical(0, -0) //=> false\n * identical(NaN, NaN) //=> true\n */\nconst identical = curry(baseIdentical)\n\nexport default identical\n\nexport { baseIdentical }\n"],"file":"identical.js"}