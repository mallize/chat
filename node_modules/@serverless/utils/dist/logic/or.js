"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _curryN = _interopRequireDefault(require("../common/curryN"));

var _defn = _interopRequireDefault(require("../common/defn"));

var _iterate = _interopRequireDefault(require("../common/iterate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Returns `true` if one or both of its arguments are `true`. Returns `false` if both arguments are `false`.
 *
 * This method resolves both parameters before executing.
 *
 * This method will automatically upgrade to async if a Promise is received for either value.
 *
 * @function
 * @since v0.0.13
 * @category logic
 * @param {*} valueA
 * @param {*} valueB
 * @returns {*} the first argument if truthy, otherwise the second argument.
 * @example
 *
 * or(true, true) //=> true
 * or(true, false) //=> true
 * or(false, true) //=> true
 * or(false, false) //=> false
 * await or(Promise.resolve(false), false) //=> false
 */
const or = (0, _curryN.default)(2, (0, _defn.default)('or', (...values) => (0, _iterate.default)(next => {
  if (next.done) {
    return _objectSpread({}, next, {
      value: next.prev != null ? next.prev.value : undefined
    });
  }

  if (!!next.value) {
    return _objectSpread({}, next, {
      done: true
    });
  }

  return next;
}, values)));
var _default = or;
exports.default = _default;
//# sourceMappingURL=or.js.map