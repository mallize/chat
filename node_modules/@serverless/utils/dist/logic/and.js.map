{"version":3,"sources":["../../src/logic/and.js"],"names":["and","valueA","valueB"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,GAAG,GAAG,oBAAM,mBAAK,KAAL,EAAY,CAACC,MAAD,EAASC,MAAT,KAAoBD,MAAM,IAAIC,MAA1C,CAAN,CAAZ;eAEeF,G","sourcesContent":["import curry from '../common/curry'\nimport defn from '../common/defn'\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * This method resolves both parameters before executing.\n *\n * This method will automatically upgrade to async if a Promise is received for either value.\n *\n * @function\n * @since v0.0.13\n * @category logic\n * @param {*} valueA\n * @param {*} valueB\n * @returns {*} the first argument if it is falsy, otherwise the second argument.\n * @example\n *\n * and(true, true) //=> true\n * and(true, false) //=> false\n * and(false, true) //=> false\n * and(false, false) //=> false\n * await and(Promise.resolve(false), false) //=> false\n */\nconst and = curry(defn('and', (valueA, valueB) => valueA && valueB))\n\nexport default and\n"],"file":"and.js"}