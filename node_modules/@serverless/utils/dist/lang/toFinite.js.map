{"version":3,"sources":["../../src/lang/toFinite.js"],"names":["INFINITY","MAX_INTEGER","toFinite","value","then","resolvedValue","sign"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA,MAAMA,QAAQ,GAAG,IAAI,CAArB;AACA,MAAMC,WAAW,GAAG,sBAApB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI,wBAAUA,KAAV,CAAJ,EAAsB;AACpB,WAAOA,KAAK,CAACC,IAAN,CAAYC,aAAD,IAAmBH,QAAQ,CAACG,aAAD,CAAtC,CAAP;AACD;;AACD,MAAIF,KAAK,IAAI,IAAT,IAAiB,yBAAWA,KAAK,CAACD,QAAjB,CAArB,EAAiD;AAC/C,WAAOC,KAAK,CAACD,QAAN,EAAP;AACD;;AACD,MAAI,CAACC,KAAL,EAAY;AACV,WAAOA,KAAK,KAAK,CAAV,GAAcA,KAAd,GAAsB,CAA7B;AACD;;AACDA,EAAAA,KAAK,GAAG,uBAASA,KAAT,CAAR;;AACA,MAAIA,KAAK,KAAKH,QAAV,IAAsBG,KAAK,KAAK,CAACH,QAArC,EAA+C;AAC7C,UAAMM,IAAI,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAC,CAAb,GAAiB,CAA9B;AACA,WAAOG,IAAI,GAAGL,WAAd;AACD;;AACD,SAAOE,KAAK,KAAKA,KAAV,GAAkBA,KAAlB,GAA0B,CAAjC;AACD,CAhBD;;eAkBeD,Q","sourcesContent":["import isFunction from './isFunction'\nimport isPromise from './isPromise'\nimport toNumber from './toNumber'\n\n/** Used as references for various `Number` constants. */\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e308\n\n/**\n * Converts `value` to a finite number.\n *\n * @function\n * @since v0.0.7\n * @category lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * toFinite(3.2)\n * // => 3.2\n *\n * toFinite(Number.MIN_VALUE)\n * // => 5e-324\n *\n * toFinite(Infinity)\n * // => 1.7976931348623157e+308\n *\n * toFinite('3.2')\n * // => 3.2\n */\nconst toFinite = (value) => {\n  if (isPromise(value)) {\n    return value.then((resolvedValue) => toFinite(resolvedValue))\n  }\n  if (value != null && isFunction(value.toFinite)) {\n    return value.toFinite()\n  }\n  if (!value) {\n    return value === 0 ? value : 0\n  }\n  value = toNumber(value)\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = value < 0 ? -1 : 1\n    return sign * MAX_INTEGER\n  }\n  return value === value ? value : 0\n}\n\nexport default toFinite\n"],"file":"toFinite.js"}