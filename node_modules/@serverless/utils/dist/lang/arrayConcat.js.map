{"version":3,"sources":["../../src/lang/arrayConcat.js"],"names":["arrayConcat","array","values","TypeError","concat"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQ,GAAGC,MAAX,KAAsB;AACxC,MAAI,CAAC,sBAAQD,KAAR,CAAL,EAAqB;AACnB,UAAM,IAAIE,SAAJ,CACH,2EAA0EF,KAAM,EAD7E,CAAN;AAGD;;AACD,SAAOA,KAAK,CAACG,MAAN,CAAa,GAAGF,MAAhB,CAAP;AACD,CAPD;;eASeF,W","sourcesContent":["import isArray from './isArray'\n\n/**\n * Concat an array with two or more arrays. This method does not change the existing arrays, but instead returns a new array.\n *\n * @function\n * @since v0.0.13\n * @category lang\n * @param {Array} array The array concat with the given values\n * @param {...*} values The values to concat to the array\n * @returns {Array} A new array with the values concatenated\n * @example\n *\n * arrayConcat(['a', 'b', 'c'], [1, 2, 3])\n * //=> ['a', 'b', 'c', 1, 2, 3]\n *\n * arrayConcat([1, 2, 3], [4, 5, 6], [7, 8, 9])\n * //=> [1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * arrayConcat(['a', 'b', 'c'], 1, [2, 3])\n * //=> ['a', 'b', 'c', 1, 2, 3]\n */\nconst arrayConcat = (array, ...values) => {\n  if (!isArray(array)) {\n    throw new TypeError(\n      `arrayConcat method expected 'array' to be an Array. Instead it received ${array}`\n    )\n  }\n  return array.concat(...values)\n}\n\nexport default arrayConcat\n"],"file":"arrayConcat.js"}