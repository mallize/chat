"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./baseGetTag"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`, `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @function
 * @since v0.0.10
 * @category lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * isError(new Error)
 * // => true
 *
 * isError(Error)
 * // => false
 */
const isError = value => {
  if (!(0, _isObjectLike.default)(value)) {
    return false;
  }

  const tag = (0, _baseGetTag.default)(value);
  return tag == '[object Error]' || tag == '[object DOMException]' || typeof value.message == 'string' && typeof value.name == 'string' && !(0, _isPlainObject.default)(value);
};

var _default = isError;
exports.default = _default;
//# sourceMappingURL=isError.js.map