{"version":3,"sources":["../../src/lang/baseGetTag.js"],"names":["Object","prototype","hasOwnProperty","toString","symToStringTag","Symbol","toStringTag","undefined","baseGetTag","value","call","isOwn","tag","unmasked","e","result"],"mappings":";;;;;;0BAAqCA,MAAM,CAACC,S;MAApCC,c,qBAAAA,c;MAAgBC,Q,qBAAAA,Q;AACxB,MAAMC,cAAc,GAAG,OAAOC,MAAP,IAAiB,WAAjB,GAA+BA,MAAM,CAACC,WAAtC,GAAoDC,SAA3E;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAOA,KAAK,KAAKF,SAAV,GAAsB,oBAAtB,GAA6C,eAApD;AACD;;AACD,MAAI,EAAEH,cAAc,IAAIA,cAAc,IAAIJ,MAAM,CAACS,KAAD,CAA5C,CAAJ,EAA0D;AACxD,WAAON,QAAQ,CAACO,IAAT,CAAcD,KAAd,CAAP;AACD;;AACD,QAAME,KAAK,GAAGT,cAAc,CAACQ,IAAf,CAAoBD,KAApB,EAA2BL,cAA3B,CAAd;AACA,QAAMQ,GAAG,GAAGH,KAAK,CAACL,cAAD,CAAjB;AACA,MAAIS,QAAQ,GAAG,KAAf;;AACA,MAAI;AACFJ,IAAAA,KAAK,CAACL,cAAD,CAAL,GAAwBG,SAAxB;AACAM,IAAAA,QAAQ,GAAG,IAAX;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU,CAAE;;AAEd,QAAMC,MAAM,GAAGZ,QAAQ,CAACO,IAAT,CAAcD,KAAd,CAAf;;AACA,MAAII,QAAJ,EAAc;AACZ,QAAIF,KAAJ,EAAW;AACTF,MAAAA,KAAK,CAACL,cAAD,CAAL,GAAwBQ,GAAxB;AACD,KAFD,MAEO;AACL,aAAOH,KAAK,CAACL,cAAD,CAAZ;AACD;AACF;;AACD,SAAOW,MAAP;AACD,CAxBD;;eA0BeP,U","sourcesContent":["const { hasOwnProperty, toString } = Object.prototype\nconst symToStringTag = typeof Symbol != 'undefined' ? Symbol.toStringTag : undefined\n\nconst baseGetTag = (value) => {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]'\n  }\n  if (!(symToStringTag && symToStringTag in Object(value))) {\n    return toString.call(value)\n  }\n  const isOwn = hasOwnProperty.call(value, symToStringTag)\n  const tag = value[symToStringTag]\n  let unmasked = false\n  try {\n    value[symToStringTag] = undefined\n    unmasked = true\n  } catch (e) {}\n\n  const result = toString.call(value)\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag\n    } else {\n      delete value[symToStringTag]\n    }\n  }\n  return result\n}\n\nexport default baseGetTag\n"],"file":"baseGetTag.js"}