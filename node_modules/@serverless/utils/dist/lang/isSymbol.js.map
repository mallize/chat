{"version":3,"sources":["../../src/lang/isSymbol.js"],"names":["isSymbol","value","type"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,IAAI,GAAG,OAAOD,KAApB;AACA,SACEC,IAAI,IAAI,QAAR,IACCA,IAAI,IAAI,QAAR,IAAoBD,KAAK,IAAI,IAA7B,IAAqC,0BAAYA,KAAZ,KAAsB,iBAF9D;AAID,CAND;;eAQeD,Q","sourcesContent":["import toStringTag from './toStringTag'\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * isSymbol(Symbol.iterator)\n * // => true\n * isSymbol(Symbol('abc'))\n * // => true\n * isSymbol(Symbol.for('abc'))\n * // => true\n *\n * isSymbol('abc')\n * // => false\n */\nconst isSymbol = (value) => {\n  const type = typeof value\n  return (\n    type == 'symbol' ||\n    (type == 'object' && value != null && toStringTag(value) == '[object Symbol]')\n  )\n}\n\nexport default isSymbol\n"],"file":"isSymbol.js"}