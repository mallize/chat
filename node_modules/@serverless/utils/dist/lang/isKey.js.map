{"version":3,"sources":["../../src/lang/isKey.js"],"names":["reIsDeepProp","reIsPlainProp","isKey","value","object","Array","isArray","type","test","Object"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA,MAAMA,YAAY,GAAG,kDAArB;AACA,MAAMC,aAAa,GAAG,OAAtB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,WAAO,KAAP;AACD;;AACD,QAAMI,IAAI,GAAG,OAAOJ,KAApB;;AACA,MAAII,IAAI,IAAI,QAAR,IAAoBA,IAAI,IAAI,SAA5B,IAAyCJ,KAAK,IAAI,IAAlD,IAA0D,uBAASA,KAAT,CAA9D,EAA+E;AAC7E,WAAO,IAAP;AACD;;AACD,SACEF,aAAa,CAACO,IAAd,CAAmBL,KAAnB,KACA,CAACH,YAAY,CAACQ,IAAb,CAAkBL,KAAlB,CADD,IAECC,MAAM,IAAI,IAAV,IAAkBD,KAAK,IAAIM,MAAM,CAACL,MAAD,CAHpC;AAKD,CAbD;;eAeeF,K","sourcesContent":["import isSymbol from './isSymbol'\n\n/** Used to match property names within property paths. */\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/\nconst reIsPlainProp = /^\\w*$/\n\nconst isKey = (value, object) => {\n  if (Array.isArray(value)) {\n    return false\n  }\n  const type = typeof value\n  if (type == 'number' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true\n  }\n  return (\n    reIsPlainProp.test(value) ||\n    !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object))\n  )\n}\n\nexport default isKey\n"],"file":"isKey.js"}