{"version":3,"sources":["../../src/lang/isDate.js"],"names":["nodeIsDate","nodeTypes","isDate","value"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA,MAAMA,UAAU,GAAGC,sBAAaA,mBAAUC,MAA1C;AAEA;;;;;;;;;;;;;;;;;AAgBA,MAAMA,MAAM,GAAGF,UAAU,GACpBG,KAAD,IAAWH,UAAU,CAACG,KAAD,CADA,GAEpBA,KAAD,IAAW,2BAAaA,KAAb,KAAuB,yBAAWA,KAAX,KAAqB,eAF3D;eAIeD,M","sourcesContent":["import baseGetTag from './baseGetTag'\nimport isObjectLike from './isObjectLike'\nimport nodeTypes from './nodeTypes'\n\n/* Node.js helper references. */\nconst nodeIsDate = nodeTypes && nodeTypes.isDate\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @function\n * @since v0.0.10\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * isDate(new Date)\n * // => true\n *\n * isDate('Mon April 23 2012')\n * // => false\n */\nconst isDate = nodeIsDate\n  ? (value) => nodeIsDate(value)\n  : (value) => isObjectLike(value) && baseGetTag(value) == '[object Date]'\n\nexport default isDate\n"],"file":"isDate.js"}