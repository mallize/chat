{"version":3,"sources":["../../src/lang/isRegExp.js"],"names":["nodeIsRegExp","nodeTypes","isRegExp","value"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA,MAAMA,YAAY,GAAGC,sBAAaA,mBAAUC,QAA5C;AAEA;;;;;;;;;;;;;;;;;AAgBA,MAAMA,QAAQ,GAAGF,YAAY,GACxBG,KAAD,IAAWH,YAAY,CAACG,KAAD,CADE,GAExBA,KAAD,IAAW,2BAAaA,KAAb,KAAuB,yBAAWA,KAAX,KAAqB,iBAF3D;eAIeD,Q","sourcesContent":["import baseGetTag from './baseGetTag'\nimport isObjectLike from './isObjectLike'\nimport nodeTypes from './nodeTypes'\n\n/* Node.js helper references. */\nconst nodeIsRegExp = nodeTypes && nodeTypes.isRegExp\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @function\n * @since v0.0.10\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * isRegExp(/abc/)\n * // => true\n *\n * isRegExp('/abc/')\n * // => false\n */\nconst isRegExp = nodeIsRegExp\n  ? (value) => nodeIsRegExp(value)\n  : (value) => isObjectLike(value) && baseGetTag(value) == '[object RegExp]'\n\nexport default isRegExp\n"],"file":"isRegExp.js"}