{"version":3,"sources":["../../src/lang/isArrayLike.js"],"names":["isArrayLike","value","length"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,WAAW,GAAIC,KAAD,IAAWA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,IAAgB,UAAjC,IAA+C,uBAASA,KAAK,CAACC,MAAf,CAA9E;;eAEeF,W","sourcesContent":["import isLength from './isLength'\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * isArrayLike([1, 2, 3]) // => true\n *\n * isArrayLike(document.body.children) // => true\n *\n * isArrayLike('abc') // => true\n *\n * isArrayLike(Function) // => false\n */\nconst isArrayLike = (value) => value != null && typeof value != 'function' && isLength(value.length)\n\nexport default isArrayLike\n"],"file":"isArrayLike.js"}