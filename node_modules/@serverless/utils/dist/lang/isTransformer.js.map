{"version":3,"sources":["../../src/lang/isTransformer.js"],"names":["isTransformer","value"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,MAAMA,aAAa,GAAIC,KAAD,IAAWA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAK,CAAC,mBAAD,CAAZ,KAAsC,UAAxF;;eAEeD,a","sourcesContent":["/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a transformer, else `false`.\n * @example\n *\n * isTransformer({\n *   ['@@transducer/step']: () => {}\n * }) // => true\n *\n * isTransformer('abc') // => false\n */\nconst isTransformer = (value) => value != null && typeof value['@@transducer/step'] === 'function'\n\nexport default isTransformer\n"],"file":"isTransformer.js"}