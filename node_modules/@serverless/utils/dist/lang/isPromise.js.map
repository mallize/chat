{"version":3,"sources":["../../src/lang/isPromise.js"],"names":["isPromise","value","then"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAMA,SAAS,GAAIC,KAAD,IAAWA,KAAK,IAAI,IAAT,IAAiB,yBAAWA,KAAK,CAACC,IAAjB,CAA9C;;eAEeF,S","sourcesContent":["import isFunction from './isFunction'\n\n/**\n * Checks whether the given value is a Promise.\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a Promise, else `false`.\n * @example\n *\n * isPromise(new Promise(() => {})) //=> true\n *\n * isPromise({}) //=> false\n *\n * isPromise({ then: () => {} }) //=> true\n */\nconst isPromise = (value) => value != null && isFunction(value.then)\n\nexport default isPromise\n"],"file":"isPromise.js"}