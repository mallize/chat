{"version":3,"sources":["../../src/lang/objectGetOwnPropertySymbols.js"],"names":["objectGetOwnPropertySymbols","object","Object","getOwnPropertySymbols"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMA,2BAA2B,GAAIC,MAAD,IAAY;AAC9C,MAAI,OAAOC,MAAM,CAACC,qBAAd,KAAwC,UAA5C,EAAwD;AACtD,WAAOD,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAP;AACD;;AACD,SAAO,EAAP;AACD,CALD;;eAOeD,2B","sourcesContent":["/**\n * Returns an array of all symbol properties found directly upon a given object.\n *\n * See [Object.getOwnPropertySymbols()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols) for more information\n *\n * @function\n * @since v0.0.18\n * @category lang\n * @param {object} object The object whose symbol properties are to be returned.\n * @returns {array} An array of all symbol properties found directly upon the given object.\n *\n * const object1 = {}\n * const a = Symbol('a')\n * const b = Symbol.for('b')\n *\n * object1[a] = 'localSymbol'\n * object1[b] = 'globalSymbol'\n *\n * const objectSymbols = objectGetOwnPropertySymbols(object1)\n *\n * console.log(objectSymbols.length)\n * //=>  2\n */\nconst objectGetOwnPropertySymbols = (object) => {\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    return Object.getOwnPropertySymbols(object)\n  }\n  return []\n}\n\nexport default objectGetOwnPropertySymbols\n"],"file":"objectGetOwnPropertySymbols.js"}