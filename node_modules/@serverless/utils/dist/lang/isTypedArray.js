"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObjectLike = _interopRequireDefault(require("./isObjectLike"));

var _nodeTypes = _interopRequireDefault(require("./nodeTypes"));

var _toStringTag = _interopRequireDefault(require("./toStringTag"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match `toStringTag` values of typed arrays. */
const reTypedTag = /^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)\]$/;
/* Node.js helper references. */

const nodeIsTypedArray = _nodeTypes.default && _nodeTypes.default.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @function
 * @since v0.0.3
 * @category lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * isTypedArray(new Uint8Array()) // => true
 *
 * isTypedArray([]) // => false
 */

const isTypedArray = nodeIsTypedArray ? value => nodeIsTypedArray(value) : value => (0, _isObjectLike.default)(value) && reTypedTag.test((0, _toStringTag.default)(value));
var _default = isTypedArray;
exports.default = _default;
//# sourceMappingURL=isTypedArray.js.map