{"version":3,"sources":["../../src/lang/isObject.js"],"names":["isObject","value","type"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,IAAI,GAAG,OAAOD,KAApB;AACA,SAAOA,KAAK,IAAI,IAAT,KAAkBC,IAAI,IAAI,QAAR,IAAoBA,IAAI,IAAI,UAA9C,CAAP;AACD,CAHD;;eAKeF,Q","sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({}) // => true\n *\n * isObject([1, 2, 3]) // => true\n *\n * isObject(Function) // => true\n *\n * isObject(null) // => false\n */\nconst isObject = (value) => {\n  const type = typeof value\n  return value != null && (type == 'object' || type == 'function')\n}\n\nexport default isObject\n"],"file":"isObject.js"}