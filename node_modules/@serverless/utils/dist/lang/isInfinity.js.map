{"version":3,"sources":["../../src/lang/isInfinity.js"],"names":["isInfinity","value","Infinity"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAMA,UAAU,GAAIC,KAAD,IAAW,uBAASA,KAAT,MAAoBC,QAAQ,KAAK,CAACD,KAAd,IAAuB,CAACC,QAAD,KAAc,CAACD,KAA1D,CAA9B;;eAEeD,U","sourcesContent":["import isNumber from './isNumber'\n\n/**\n * Checks if `value` is `Infinity` or `-Infinity`.\n *\n * @function\n * @since v0.0.13\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `Infinity` or `-Infinity`, else `false`.\n * @example\n *\n * isInfinity(Infinity)\n * // => true\n *\n * isInfinity(-Infinity)\n * // => true\n *\n * isInfinity(new Number(Infinity))\n * // => true\n *\n * isInfinity(undefined)\n * // => false\n *\n * isInfinity(123)\n * // => false\n */\nconst isInfinity = (value) => isNumber(value) && (Infinity === +value || -Infinity === +value)\n\nexport default isInfinity\n"],"file":"isInfinity.js"}