{"version":3,"sources":["../../src/lang/isPrototype.js"],"names":["objectProto","Object","prototype","isPrototype","value","Ctor","constructor","proto"],"mappings":";;;;;;;AAAA;AACA,MAAMA,WAAW,GAAGC,MAAM,CAACC,SAA3B;AAEA;;;;;;;;;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,IAAI,GAAGD,KAAK,IAAIA,KAAK,CAACE,WAA5B;AACA,QAAMC,KAAK,GAAI,OAAOF,IAAP,IAAe,UAAf,IAA6BA,IAAI,CAACH,SAAnC,IAAiDF,WAA/D;AAEA,SAAOI,KAAK,KAAKG,KAAjB;AACD,CALD;;eAOeJ,W","sourcesContent":["/** Used for built-in method references. */\nconst objectProto = Object.prototype\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @function\n * @since v0.0.3\n * @category lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nconst isPrototype = (value) => {\n  const Ctor = value && value.constructor\n  const proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto\n\n  return value === proto\n}\n\nexport default isPrototype\n"],"file":"isPrototype.js"}