"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObjectLike = _interopRequireDefault(require("./isObjectLike"));

var _toStringTag = _interopRequireDefault(require("./toStringTag"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `Number.isFinite` method.
 *
 * @function
 * @since v0.0.3
 * @category lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * isNumber(3) // => true
 *
 * isNumber(Number.MIN_VALUE) // => true
 *
 * isNumber(Infinity) // => true
 *
 * isNumber('3') // => false
 */
const isNumber = value => typeof value == 'number' || (0, _isObjectLike.default)(value) && (0, _toStringTag.default)(value) == '[object Number]';

var _default = isNumber;
exports.default = _default;
//# sourceMappingURL=isNumber.js.map